
char	**find_expression_in_argv(char **argv, int index, int nb_pipe)
{
	int	pipe_count;
	int	i;

	pipe_count = 0;
	i = 0;
	while (*argv)
	{
		if (pipe_count == (nb_pipe - index))
			break;
		if (ft_strcmp(*argv, "|") == 0)
			pipe_count++;
		argv++;
	}
	return (argv);
}

char	**cut_expression_from_argv(char **argv)
{
	char	**expression;
	int	size;
	int	i;

	size = 0;
	i = 0;
	while (argv[size] && ft_strcmp(argv[size], "|"))
		size++;
	expression = malloc(sizeof(char *) * (i + 1));
	while (i < size)
	{
		expression[i] = ft_strdup(argv[i]);
		i++;
	}
	expression[i] = 0;
	return (expression);
}

char	**get_expression(char **argv, int index, int nb_pipe)
{
	char	**exp_pointer;
	char	**expression;

	exp_pointer = find_expression_in_argv(argv, index, nb_pipe);
	expression = cut_expression_from_argv(exp_pointer);
	return (expression);
}
