minishell> export 5465 | ls
1.txt  3.txt  Makefile  cases.txt  ignore_readline.supp  inc  libft  minishell  minishell_tester  obj  src  test  test.c
minishell: export: 5465: not a valid identifier
minishell> echo $?
1
EXPECTED = 0

cat -e | ls

<<<

minishell> mkdir a
minishell> cd a
minishell> rm -rf ../a
puis cd ou pwd par exemple

echo bonjour |;ls -> segfault

export "" -> should output not a valid identifier, same for unset ""

XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
minishell> echo "Permission" > /root/test_permission.txt
Permission
//EXPECTED : 
yacode@DESKTOP-SRM6L10:~/minishell$ echo "Permission" > /root/test_permission.txt
bash: /root/test_permission.txt: Permission denied

$PATH
/randomstuff outputs no such file or directory

echo bonjour >hey >>hey2 >>hey3

minishell> echo "This is a test
Error: Unmatched quotes
//WE DONT WANT TO LEAVE MINISHELL IN THIS CASE

./minishell                                                               134 ↵ ──(Sat,Mar09)─┘
minishell> /bin/ls
double free or corruption (fasttop)
[1]    36900 IOT instruction  ./minishell

./minishell in minishell => "double free or corruption (fasttop)"

bad tokenizing redirection
Exemple : 
minishell> ls>file1.txt
value = ls>file1.txt
type = -1

cat | ls => ^M

cat | ls JUST DOES LS, SHOULD ALSO OPEN THE INTERACTION MODE FOR CAT
=> "interactive command" WITH AT LEAST ONE PIPE

echo |  SHOULD SYNTAX ERROR 

incorrect command followed by at least one pipe and at least one existing command, this relaunches readline too early.
I managed to fix this by using sleep() but the function is forbidden (I commented), so I need to find another alternative
case of error : zefze | ls

tout les builtins + | vont consider | comme un argument

minishell> YANIS=2
Element = YANIS=2
Type = 2
minishell> "BONJOUR=2"
Element = BONJOUR=2
Type = 2

a="ls -l file"
$a

echo \

NE PAS GERER
yacode@DESKTOP-SRM6L10:~/minishell$ env ls
Makefile  cases.txt  inc  libft  minishell  obj  src
yacode@DESKTOP-SRM6L10:~/minishell$ env pwd
/home/yacode/minishell

bash
yacode@DESKTOP-SRM6L10:~/minishell$ exit 9223372036854775807
exit
└─(11:36:56 on master ✹ ✭)──> bash
yacode@DESKTOP-SRM6L10:~/minishell$ exit 9223372036854775808
exit
bash: exit: 9223372036854775808: numeric argument required


env + args => print env when it should display an error message

pressing enter with no input will cause a segfault


minishell> exit ""
exit
minishell: exit: "": numeric argument required

NEED TO FREE BEFORE EXIT FOR STILL RECHEABLE
