valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --track-fds=yes --suppressions=ignore_readline.supp --trace-children=yes ./minishell

Test   5: ‚ùå echo <"./test_files/infile" "bonjour       42" 
mini output = ()
bash output = (bonjour 42)
mini exit code = 1
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()

Test   6: ‚ùå cat <"./test_files/file name with spaces" 
mini output = ()
bash output = (üòà üòà üòà This will break your minishell üòà üòà üòà)
mini exit code = 1
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()

Test  11: ‚ùå cat <"./test_files/infile" 
mini output = ()
bash output = (hi hello world 42)
mini exit code = 1
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()

Test  12: ‚ùå echo <"./test_files/infile_big" | cat <"./test_files/infile" 
mini output = ()
bash output = (hi hello world 42)
mini exit code = 1
bash exit code = 0
mini error = ( No such file or directory No such file or directory)
bash error = ()

Test  13: ‚úÖ‚ö†Ô∏è  echo <"./test_files/infile_big" | cat "./test_files/infile" 
mini error = ( No such file or directory)
bash error = ()

Test  14: ‚ùå echo <"./test_files/infile_big" | echo <"./test_files/infile" 
mini exit code = 1
bash exit code = 0
mini error = ( No such file or directory No such file or directory)
bash error = ()

Test  15: ‚ùå echo hi | cat <"./test_files/infile" 
mini output = ()
bash output = (hi hello world 42)
mini exit code = 1
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()

Test  17: ‚úÖ‚ö†Ô∏è  cat <"./test_files/infile" | echo hi 
mini error = ( No such file or directory)
bash error = ( Broken pipe)
Test  18: ‚ùå cat <"./test_files/infile" | grep hello 
mini output = ()
bash output = (hello)
mini exit code = 1
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()

Test  23: ‚ùå cat <missing | cat <"./test_files/infile" 
mini output = ()
bash output = (hi hello world 42)
mini exit code = 1
bash exit code = 0
mini error = ( No such file or directory No such file or directory)
bash error = ( No such file or directory)

Test  30: ‚ùå ls >"./outfiles/outfile with spaces" 
Only in ./bash_outfiles: outfile with spaces
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
README.md
bash.supp
bash_outfiles
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
os_specific
outfiles
pipes
redirects
syntax
test_files
tester
wildcards
mini exit code = 1
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()

Test  31: ‚ùå ls >"./outfiles/outfile""1""2""3""4""5" 
Only in ./bash_outfiles: outfile12345
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
README.md
bash.supp
bash_outfiles
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
os_specific
outfiles
pipes
redirects
syntax
test_files
tester
wildcards
mini exit code = 1
bash exit code = 0
mini error = ( No such file or directory)
bash error = ()

Test  32: ‚ùå ls >"./outfiles/outfile01" >./test_files/invalid_permission >"./outfiles/outfile02" 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini error = ( No such file or directory)
bash error = ( Permission denied)

Test  34: ‚ùå cat <"./test_files/infile" >"./outfiles/outfile01" 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
hi
hello
world
42
mini exit code = 1
bash exit code = 0
mini error = ( No such file or directory No such file or directory)
bash error = ()

Test  42: ‚ùå echo hi >./test_files/invalid_permission >./outfiles/outfile01 | echo bye 
Only in ./mini_outfiles: outfile01
mini outfiles:
bash outfiles:
cat: './bash_outfiles/*': No such file or directory

Test  45: ‚ùå echo hi | echo bye >./test_files/invalid_permission >./outfiles/outfile01 
Only in ./mini_outfiles: outfile01
mini outfiles:
bash outfiles:
cat: './bash_outfiles/*': No such file or directory

Test  48: ‚ùå cat <missing >./outfiles/outfile01 
Only in ./mini_outfiles: outfile01
mini outfiles:
bash outfiles:
cat: './bash_outfiles/*': No such file or directory

Test  50: ‚úÖ‚ö†Ô∏è  cat <missing >./test_files/invalid_permission 
mini error = ( No such file or directory Permission denied)
bash error = ( No such file or directory)

Test  52: ‚úÖ‚ö†Ô∏è  cat >./outfiles/outfile01 <missing >./test_files/invalid_permission 
mini error = ( No such file or directory Permission denied)
bash error = ( No such file or directory)

Test  60: ‚ùå ls >>./test_files/invalid_permission >>./outfiles/outfile01 
Only in ./mini_outfiles: outfile01
mini outfiles:
bash outfiles:
cat: './bash_outfiles/*': No such file or directory

Test  62: ‚ùå ls >./outfiles/outfile01 >>./test_files/invalid_permission >>./outfiles/outfile02 
Only in ./mini_outfiles: outfile02
mini outfiles:
bash outfiles:

Test  63: ‚ùå ls <missing >>./test_files/invalid_permission >>./outfiles/outfile02 
Only in ./mini_outfiles: outfile02
mini outfiles:
bash outfiles:
cat: './bash_outfiles/*': No such file or directory
mini error = ( No such file or directory Permission denied)
bash error = ( No such file or directory)

Test  64: ‚ùå ls >>./test_files/invalid_permission >>./outfiles/outfile02 <missing 
Only in ./mini_outfiles: outfile02
mini outfiles:
bash outfiles:
cat: './bash_outfiles/*': No such file or directory

Test  71: ‚ùå echo hi >>./test_files/invalid_permission >./outfiles/outfile01 | echo bye 
Only in ./mini_outfiles: outfile01
mini outfiles:
bash outfiles:
cat: './bash_outfiles/*': No such file or directory

Test  74: ‚ùå cat <minishell.h>./outfiles/outfile 
Only in ./mini_outfiles: outfile
mini outfiles:
bash outfiles:
cat: './bash_outfiles/*': No such file or directory

XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
FREE


XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
INCORRECT G STATUS


XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
FD LEAKS


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
minishell> ls > 1 > 2 > 3 > 1.txt > 4 > 5
minishell: 1.txt: Permission denied
4 et 5 still open at exit		FIXED

minishell> ls > 1 < filethatdoesntexit
fd leak			FIXED

minishell> exit  -> invalid read of size 8   FIXED

minishell> < filethatexists ->  filethatexists open at exit  FIXED

minishell> < wgeg wgwge -> invalid free and valgrind errors    FIXED 
minishell> < wgeg cat -> invalid free and valgrind errors       FIXED 


minishell> cat -e < 5465
minishell: 5465: No such file or directory
minishell> echo $?
139       FIXED

echo feur | exit | echo quoicoubeh => still REACHEABLE
exit | ls
ls | exit    FIXED

heredoc open at exit FIXED

minishell>|wgejge
minishell> |wgjgwe command not found

should be
syntax error near

minishell> < efwefwewfe | ls
minishell: efwefwewfe: No such file or directory
1  2  cases.txt  compile_commands.json  eof  EOF  ewfewfe  fwefwfe  ignore_readline.supp  inc  libft  Makefile  minishell  minishell_tester  obj  src  test.c  test.txt

minishell> < cat -e 1
minishell: cat: No such file or directory
minishell: -e: command not found


PARSING TOKENIZING
export """
segfaults

"" 
invalid read of size 1

ls ""
should output a error message

export "" -> should output not a valid identifier, same for unset ""

echo || ls -> we should output a error message and quit as we don't do bonuses

minishell> mkdir a
minishell> cd a
minishell> rm -rf ../a
puis cd ou pwd par exemple

echo bonjour |;ls -> segfault

echo |;
then
ls

ls will output nothing
$EMPTY 
$EMPTY echo hi 

$PWD 

minishell> echo "Permission" > /root/test_permission.txt
Permission
//EXPECTED : 
yacode@DESKTOP-SRM6L10:~/minishell$ echo "Permission" > /root/test_permission.txt
bash: /root/test_permission.txt: Permission denied

$PATH
/randomstuff outputs no such file or directory

echo bonjour >hey >>hey2 >>hey3

minishell> echo "This is a test
Error: Unmatched quotes
//WE DONT WANT TO LEAVE MINISHELL IN THIS CASE

./minishell                                                               134 ‚Üµ ‚îÄ‚îÄ(Sat,Mar09)‚îÄ‚îò
minishell> /bin/ls
double free or corruption (fasttop)
[1]    36900 IOT instruction  ./minishell

./minishell in minishell => "double free or corruption (fasttop)"

bad tokenizing redirection
Exemple : 
minishell> ls>file1.txt
value = ls>file1.txt
type = -1

cat | ls => ^M

cat | ls JUST DOES LS, SHOULD ALSO OPEN THE INTERACTION MODE FOR CAT
=> "interactive command" WITH AT LEAST ONE PIPE

echo |  SHOULD SYNTAX ERROR 

incorrect command followed by at least one pipe and at least one existing command, this relaunches readline too early.
I managed to fix this by using sleep() but the function is forbidden (I commented), so I need to find another alternative
case of error : zefze | ls

tout les builtins + | vont consider | comme un argument

minishell> YANIS=2
Element = YANIS=2
Type = 2
minishell> "BONJOUR=2"
Element = BONJOUR=2
Type = 2

a="ls -l file"
$a

echo \

NE PAS GERER
yacode@DESKTOP-SRM6L10:~/minishell$ env ls
Makefile  cases.txt  inc  libft  minishell  obj  src
yacode@DESKTOP-SRM6L10:~/minishell$ env pwd
/home/yacode/minishell

bash
yacode@DESKTOP-SRM6L10:~/minishell$ exit 9223372036854775807
exit
‚îî‚îÄ(11:36:56 on master ‚úπ ‚ú≠)‚îÄ‚îÄ> bash
yacode@DESKTOP-SRM6L10:~/minishell$ exit 9223372036854775808
exit
bash: exit: 9223372036854775808: numeric argument required


env + args => print env when it should display an error message

pressing enter with no input will cause a segfault


minishell> exit ""
exit
minishell: exit: "": numeric argument required

NEED TO FREE BEFORE EXIT FOR STILL RECHEABLE
