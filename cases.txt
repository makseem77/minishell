LEAKS / VALGRIND ERRORS: 
valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --suppressions=ignore_readline.supp -s ./minishell

gwejgjgw -> invalid commands leads to valgrind errors.  DONE

builtins alone -> 2 leaks, from how we handle builtins alone.

builtins in pipe -> lot of valgrind errors, still reachable for some reason.

./minishell in minishell => "double free or corruption (fasttop)"

XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
cat | ls => ^M

cat | ls JUST DOES LS, SHOULD ALSO OPEN THE INTERACTION MODE FOR CAT
=> "interactive command" WITH AT LEAST ONE PIPE

echo |  SHOULD SYNTAX ERROR 

incorrect command followed by at least one pipe and at least one existing command, this relaunches readline too early.
I managed to fix this by using sleep() but the function is forbidden (I commented), so I need to find another alternative
case of error : zefze | ls

tout les builtins + | vont consider | comme un argument

minishell> YANIS=2
Element = YANIS=2
Type = 2
minishell> "BONJOUR=2"
Element = BONJOUR=2
Type = 2

a="ls -l file"
$a

echo \

NE PAS GERER
yacode@DESKTOP-SRM6L10:~/minishell$ env ls
Makefile  cases.txt  inc  libft  minishell  obj  src
yacode@DESKTOP-SRM6L10:~/minishell$ env pwd
/home/yacode/minishell

bash
yacode@DESKTOP-SRM6L10:~/minishell$ exit 9223372036854775807
exit
└─(11:36:56 on master ✹ ✭)──> bash
yacode@DESKTOP-SRM6L10:~/minishell$ exit 9223372036854775808
exit
bash: exit: 9223372036854775808: numeric argument required


env + args => print env when it should display an error message

pressing enter with no input will cause a segfault


minishell> exit ""
exit
minishell: exit: "": numeric argument required

NEED TO FREE BEFORE EXIT FOR STILL RECHEABLE
