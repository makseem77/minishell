valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --track-fds=yes --suppressions=ignore_readline.supp --trace-children=yes ./minishell

minishell> exit  -> invalid read of size 8   FIXED

minishell> < filethatexists ->  filethatexists open at exit  FIXED

minishell> < wgeg wgwge -> invalid free and valgrind errors    FIXED 
minishell> < wgeg cat -> invalid free and valgrind errors       FIXED 


minishell> cat -e < 5465
minishell: 5465: No such file or directory
minishell> echo $?
139       FIXED

echo feur | exit | echo quoicoubeh => still REACHEABLE
exit | ls
ls | exit    FIXED

heredoc open at exit FIXED I THINK

Test  56: ✅ grep hi <./test_files/infile 
Test  57: ✅ grep hi "<infile" <         ./test_files/infile 
Test  58: ✅ echo hi < ./test_files/infile bye bye 
Test  59: ✅ grep hi <./test_files/infile_big <./test_files/infile 
Test  60: ✅ echo <"./test_files/infile" "bonjour       42" 
Test  61: ✅ cat <"./test_files/file name with spaces" 
Test  62: ✅ cat <./test_files/infile_big ./test_files/infile 
Test  63: ✅ cat <"1""2""3""4""5" 
Test  64: ✅ echo <"./test_files/infile" <missing <"./test_files/infile" 
Test  65: ✅ echo <missing <"./test_files/infile" <missing 
Test  66: ✅ cat <"./test_files/infile" 
Test  67: ✅ echo <"./test_files/infile_big" | cat <"./test_files/infile" 
Test  68: ✅ echo <"./test_files/infile_big" | cat "./test_files/infile" 
Test  69: ✅ echo <"./test_files/infile_big" | echo <"./test_files/infile" 
Test  70: ✅ echo hi | cat <"./test_files/infile" 
Test  71: ✅ echo hi | cat "./test_files/infile" 
Test  72: ✅⚠️  cat <"./test_files/infile" | echo hi 
mini error = ()
bash error = ( Broken pipe)
Test  73: ✅ cat <missing 
Test  74: ✅ cat <missing | cat 
Test  75: ✅ cat <missing | echo oi 
Test  76: ✅ cat <missing | cat <"./test_files/infile" 
Test  77: ✅ echo <123 <456 hi | echo 42 
Test  78: ✅ ls >./outfiles/outfile01 
Test  79: ✅ ls >         ./outfiles/outfile01 
Test  80: ✅ echo hi >         ./outfiles/outfile01 bye 
Test  81: ✅ ls >./outfiles/outfile01 >./outfiles/outfile02 
Test  82: ✅ ls >./outfiles/outfile01 >./test_files/invalid_permission 
Test  83: ✅ ls >"./outfiles/outfile with spaces" 
Test  84: ✅ ls >"./outfiles/outfile""1""2""3""4""5" 
Test  85: ❌ ls >"./outfiles/outfile01" >./test_files/invalid_permission >"./outfiles/outfile02" 
Only in ./mini_outfiles: outfile02
mini outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
os_specific
outfiles
pipes
README.md
redirects
syntax
tester
test_files
wildcards
bash outfiles:
mini exit code = 0
bash exit code = 1
Test  86: ❌ ls >./test_files/invalid_permission >"./outfiles/outfile01" >./test_files/invalid_permission 
Only in ./mini_outfiles: outfile01
mini outfiles:
bash outfiles:
cat: './bash_outfiles/*': No such file or directory
mini error = ( Permission denied Permission denied)
bash error = ( Permission denied)
Test  87: ✅ cat <"./test_files/infile" >"./outfiles/outfile01" 
Test  88: ✅ echo hi >./outfiles/outfile01 | echo bye 
Test  89: ✅ echo hi >./outfiles/outfile01 >./outfiles/outfile02 | echo bye 
Test  90: ✅ echo hi | echo >./outfiles/outfile01 bye 
Test  91: ✅ echo hi | echo bye >./outfiles/outfile01 >./outfiles/outfile02 
Test  92: ✅ echo hi >./outfiles/outfile01 | echo bye >./outfiles/outfile02 
Test  93: ✅ echo hi >./outfiles/outfile01 >./test_files/invalid_permission | echo bye 
Test  94: ✅ echo hi >./test_files/invalid_permission | echo bye 
Test  95: ❌ echo hi >./test_files/invalid_permission >./outfiles/outfile01 | echo bye 
Only in ./mini_outfiles: outfile01
mini outfiles:
hi
bash outfiles:
cat: './bash_outfiles/*': No such file or directory
Test  96: ✅ echo hi | echo bye >./test_files/invalid_permission 
Test  97: ✅ echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission 
Test  98: ❌ echo hi | echo bye >./test_files/invalid_permission >./outfiles/outfile01 
Only in ./mini_outfiles: outfile01
mini outfiles:
bye
bash outfiles:
cat: './bash_outfiles/*': No such file or directory
mini exit code = 0
bash exit code = 1
Test  99: ✅ cat <"./test_files/infile" >./test_files/invalid_permission 
Test 100: ✅ cat >./test_files/invalid_permission <"./test_files/infile" 
Test 101: ❌ cat <missing >./outfiles/outfile01 
Only in ./mini_outfiles: outfile01
mini outfiles:
bash outfiles:
cat: './bash_outfiles/*': No such file or directory
Test 102: ✅ cat >./outfiles/outfile01 <missing 
Test 103: ✅⚠️  cat <missing >./test_files/invalid_permission 
mini error = ( No such file or directory Permission denied)
bash error = ( No such file or directory)
Test 104: ✅ cat >./test_files/invalid_permission <missing 
Test 105: ✅⚠️  cat >./outfiles/outfile01 <missing >./test_files/invalid_permission 
mini error = ( No such file or directory Permission denied)
bash error = ( No such file or directory)
Test 106: ✅ ls >>./outfiles/outfile01 
Test 107: ✅ ls >>      ./outfiles/outfile01 
Test 108: ✅ ls >>./outfiles/outfile01 >./outfiles/outfile01 
Test 109: ✅ ls >./outfiles/outfile01 >>./outfiles/outfile01 
Test 110: ✅ ls >./outfiles/outfile01 >>./outfiles/outfile01 >./outfiles/outfile02 
Test 111: ✅ ls >>./outfiles/outfile01 >>./outfiles/outfile02 
Test 112: ✅ ls >>./test_files/invalid_permission 
Test 113: ❌ ls >>./test_files/invalid_permission >>./outfiles/outfile01 
Only in ./mini_outfiles: outfile01
mini outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
os_specific
outfiles
pipes
README.md
redirects
syntax
tester
test_files
wildcards
bash outfiles:
cat: './bash_outfiles/*': No such file or directory
mini exit code = 0
bash exit code = 1
Test 114: ✅ ls >>./outfiles/outfile01 >>./test_files/invalid_permission 
Test 115: ❌ ls >./outfiles/outfile01 >>./test_files/invalid_permission >>./outfiles/outfile02 
Only in ./mini_outfiles: outfile02
mini outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
os_specific
outfiles
pipes
README.md
redirects
syntax
tester
test_files
wildcards
bash outfiles:
mini exit code = 0
bash exit code = 1
Test 116: ❌ ls <missing >>./test_files/invalid_permission >>./outfiles/outfile02 
Only in ./mini_outfiles: outfile02
mini outfiles:
bash outfiles:
cat: './bash_outfiles/*': No such file or directory
mini error = ( No such file or directory Permission denied)
bash error = ( No such file or directory)
Test 117: ❌ ls >>./test_files/invalid_permission >>./outfiles/outfile02 <missing 
Only in ./mini_outfiles: outfile02
mini outfiles:
bash outfiles:
cat: './bash_outfiles/*': No such file or directory
mini error = ( Permission denied No such file or directory)
bash error = ( Permission denied)
Test 118: ✅ echo hi >>./outfiles/outfile01 | echo bye 
Test 119: ✅ echo hi >>./outfiles/outfile01 >>./outfiles/outfile02 | echo bye 
Test 120: ✅ echo hi | echo >>./outfiles/outfile01 bye 
Test 121: ✅ echo hi | echo bye >>./outfiles/outfile01 >>./outfiles/outfile02 
Test 122: ✅ echo hi >>./outfiles/outfile01 | echo bye >>./outfiles/outfile02 
Test 123: ✅ echo hi >>./test_files/invalid_permission | echo bye 
Test 124: ❌ echo hi >>./test_files/invalid_permission >./outfiles/outfile01 | echo bye 
Only in ./mini_outfiles: outfile01
mini outfiles:
hi
bash outfiles:
cat: './bash_outfiles/*': No such file or directory
Test 125: ✅ echo hi | echo bye >>./test_files/invalid_permission 
Test 126: ✅ echo hi | echo >>./outfiles/outfile01 bye >./test_files/invalid_permission 
Test 127: ❌ cat <minishell.h>./outfiles/outfile 
Only in ./mini_outfiles: outfile
mini outfiles:
bash outfiles:
cat: './bash_outfiles/*': No such file or directory
Test 128: ✅ cat <minishell.h|ls

XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
FREE


XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
INCORRECT G STATUS


XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
FD LEAKS


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
minishell>|wgejge
minishell> |wgjgwe command not found

should be
syntax error near

minishell> < efwefwewfe | ls
minishell: efwefwewfe: No such file or directory
1  2  cases.txt  compile_commands.json  eof  EOF  ewfewfe  fwefwfe  ignore_readline.supp  inc  libft  Makefile  minishell  minishell_tester  obj  src  test.c  test.txt

minishell> < cat -e 1
minishell: cat: No such file or directory
minishell: -e: command not found


PARSING TOKENIZING
export """
segfaults

"" 
invalid read of size 1

ls ""
should output a error message

export "" -> should output not a valid identifier, same for unset ""

echo || ls -> we should output a error message and quit as we don't do bonuses

minishell> mkdir a
minishell> cd a
minishell> rm -rf ../a
puis cd ou pwd par exemple

echo bonjour |;ls -> segfault

echo |;
then
ls

ls will output nothing
$EMPTY 
$EMPTY echo hi 

$PWD 

minishell> echo "Permission" > /root/test_permission.txt
Permission
//EXPECTED : 
yacode@DESKTOP-SRM6L10:~/minishell$ echo "Permission" > /root/test_permission.txt
bash: /root/test_permission.txt: Permission denied

$PATH
/randomstuff outputs no such file or directory

echo bonjour >hey >>hey2 >>hey3

minishell> echo "This is a test
Error: Unmatched quotes
//WE DONT WANT TO LEAVE MINISHELL IN THIS CASE

./minishell                                                               134 ↵ ──(Sat,Mar09)─┘
minishell> /bin/ls
double free or corruption (fasttop)
[1]    36900 IOT instruction  ./minishell

./minishell in minishell => "double free or corruption (fasttop)"

bad tokenizing redirection
Exemple : 
minishell> ls>file1.txt
value = ls>file1.txt
type = -1

cat | ls => ^M

cat | ls JUST DOES LS, SHOULD ALSO OPEN THE INTERACTION MODE FOR CAT
=> "interactive command" WITH AT LEAST ONE PIPE

echo |  SHOULD SYNTAX ERROR 

incorrect command followed by at least one pipe and at least one existing command, this relaunches readline too early.
I managed to fix this by using sleep() but the function is forbidden (I commented), so I need to find another alternative
case of error : zefze | ls

tout les builtins + | vont consider | comme un argument

minishell> YANIS=2
Element = YANIS=2
Type = 2
minishell> "BONJOUR=2"
Element = BONJOUR=2
Type = 2

a="ls -l file"
$a

echo \

NE PAS GERER
yacode@DESKTOP-SRM6L10:~/minishell$ env ls
Makefile  cases.txt  inc  libft  minishell  obj  src
yacode@DESKTOP-SRM6L10:~/minishell$ env pwd
/home/yacode/minishell

bash
yacode@DESKTOP-SRM6L10:~/minishell$ exit 9223372036854775807
exit
└─(11:36:56 on master ✹ ✭)──> bash
yacode@DESKTOP-SRM6L10:~/minishell$ exit 9223372036854775808
exit
bash: exit: 9223372036854775808: numeric argument required


env + args => print env when it should display an error message

pressing enter with no input will cause a segfault


minishell> exit ""
exit
minishell: exit: "": numeric argument required

NEED TO FREE BEFORE EXIT FOR STILL RECHEABLE
